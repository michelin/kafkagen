name: Push Main

on:
  push:
    branches:
      - 'main'

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MICHELIN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.MICHELIN_DOCKER_HUB_PASSWD }}

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Check style
        run: ./mvnw checkstyle:check

      - name: Build
        id: build_jar
        run: ./mvnw package

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: kafkagen-jar
          path: ${{ github.workspace }}/target/*.jar

      - name: Docker
        run: ./mvnw package -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -DskipTests

  build-native-linux-macos:
    name: Build Native Image ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
        include:
          - os: 'ubuntu-latest'
            platform: 'linux-amd64'
          - os: 'macos-latest'
            platform: 'darwin-arm64'
    steps:
      - name: Docker login
        if: matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MICHELIN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.MICHELIN_DOCKER_HUB_PASSWD }}

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build
        id: build_native_linux_macos
        run: |
          ./mvnw package -Pnative -DskipTests
          echo current_version=$(echo $(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)) >> $GITHUB_OUTPUT

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: kafkactl-${{ matrix.platform }}
          path: ${{ github.workspace }}/target/**/*-runner

      - name: Docker
        if: matrix.os == 'ubuntu-latest'
        run: ./mvnw package -Dnative -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.tag=${{ steps.build_native_linux_macos.outputs.current_version }}-native -DskipTests

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          .\mvnw package -Pnative -DskipTests
        shell: cmd

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: kafkagen-windows
          path: ${{ github.workspace }}/target/*.exe
